package DAO;

import java.sql.*;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import Model.Account;
import Util.ConnectionUtil;

public class AccountDAO {
    Logger logger  = LoggerFactory.getLogger(AccountDAO.class);
    /**
     * Insert an account into the Account table.
     * The account_id should be automatically generated by the sql database if it is not provided.
     * @param account an account object.
     * @return The newly inserted account object if successful.
     */
    public Account insertAccount(Account account){
        if(account.getUsername().equals("")) {
            logger.info("Username cannot be empty");
            return null;
        }
        if (account.getPassword().length() < 4) {
            logger.info("Password must be at least 4 characters long");
            return null;
        }
        Connection connection = ConnectionUtil.getConnection();
        if (getAccount(account) != null) {
            logger.info("Account already exist");
            return null;
        }
        try {
            //Write SQL logic here. You should only be inserting with the name column, so that the database may
            //automatically generate a primary key.
            String sql = "INSERT INTO account (username, password) VALUES (?, ?)" ;
            PreparedStatement preparedStatement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);

            //write preparedStatement's setString method here.
            preparedStatement.setString(1, account.getUsername());
            preparedStatement.setString(2, account.getPassword());

            preparedStatement.executeUpdate();
            ResultSet pkeyResultSet = preparedStatement.getGeneratedKeys();
            if(pkeyResultSet.next()){
                int generated_account_id = (int) pkeyResultSet.getLong(1);
                return new Account(generated_account_id, account.getUsername(), account.getPassword());
            }
        }catch(SQLException e){
            logger.info("Error in insert account in accountDAO");
            logger.info(e.getMessage());
        }
        return null;
    }

    /**
     * Retrieve an account from the Account table.
     * @return an account identified by username from the json object.
     */
    public Account getAccount(Account account){
        Connection connection = ConnectionUtil.getConnection();
        try {
            //Write SQL logic here
            String sql = "SELECT * FROM account WHERE username = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);

            //write preparedStatement's setInt method here.
            preparedStatement.setString(1, account.getUsername());

            ResultSet rs = preparedStatement.executeQuery();
            while(rs.next()){
                Account accountRes = new Account(rs.getInt("account_id"),
                        rs.getString("username"),
                        rs.getString("password"));
                return accountRes;
            }
        }catch(SQLException e){
            logger.info(e.getMessage());
        }
        return null;
    }
}
